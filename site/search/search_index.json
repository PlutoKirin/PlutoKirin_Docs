{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Homepage","text":"<p> \u7ea6 12 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f</p> <p>PlutoKirin \u7684\u77e5\u8bc6\u7b14\u8bb0\u7ad9 \ud83c\udf1f</p> <p>\u672c\u7ad9\u65bd\u5de5\u4e2d\u2026\u2026</p>"},{"location":"about/","title":"\u5173\u4e8e\u6211","text":"<p> \u7ea6 23 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f</p> <p>\u6211\u662f PlutoKirin\uff0c\u5c31\u8bfb\u4e8e ZJU\uff0c\u5316\u5b66\u5de5\u7a0b\u4e0e\u5de5\u827a\u4e13\u4e1a\uff0c\u5927\u4e8c\u5b66\u751f</p>"},{"location":"ZJU_courses/24-25_Summer_ODE_Chuanhou_Gao/","title":"24-25\u590f \u5e38\u5fae\u5206\u65b9\u7a0b\uff081\u5b66\u5206\uff09\u4e28\u90dc\u4f20\u539a \u7b14\u8bb0\u4e0e\u4fee\u8bfb\u7ecf\u9a8c\u5206\u4eab","text":"<p> \u7ea6 559 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>"},{"location":"ZJU_courses/24-25_Summer_ODE_Chuanhou_Gao/#_1","title":"\u524d\u8a00","text":"<p>\u5e38\u5fae\u5206\u65b9\u7a0b\u53ef\u8c13\u5927\u4e00\u201c\u6570\u5b66\u7c7b\u201d\u8bfe\u7a0b\u4e2d\u6700\u4e0d\u7edf\u4e00\u7684\uff0c\u4f60\u53ef\u4ee5\u5728 CC98 \u4e0a\u627e\u5230\u8bb8\u8bb8\u591a\u591a\u8d44\u6599\uff0c\u53ef\u80fd\u662f1.5\u5b66\u5206\u7684\uff0c\u4e5f\u6709\u53ef\u80fd\u662f3\u5b66\u5206\uff0c\u4e5f\u6709\u53ef\u80fd\u662f1.5\u5b66\u5206\u82f1\u6587\u5e38\u5fae\u5206\u7684\u3002</p> <p>\u672c\u8bfe\u7a0b\u4ec5\u6709\u4e00\u5b66\u5206\uff0c\u5b89\u6392\u5728\u6625\u6216\u590f\uff0c\u6709\u4f20\u8a00\u8bf4\u6625\u96be\u5ea6\u4e0e\u590f\u96be\u5ea6\u4e0d\u7edf\u4e00\uff0c\u5927\u5bb6\u53ef\u4ee5\u53bb\u95ee\u95ee\u66f4\u591a\u7684\u524d\u8f88\u3002\u4f46\u662f\u53ef\u4ee5\u80af\u5b9a\u7684\u662f\u8fd9\u95e8\u8bfe\u53ea\u8981\u8ba4\u771f\u505a\u4f5c\u4e1a+\u671f\u672b\u8003\u524d\u5237\u9898\u5c31\u53ef\u4ee5\u62ff\u5230\u4e0d\u9519\u7684\u6210\u7ee9\u3002</p>"},{"location":"ZJU_courses/24-25_Summer_ODE_Chuanhou_Gao/#_2","title":"\u6210\u7ee9\u6784\u6210","text":"<ol> <li>\u5e73\u65f6\u4f5c\u4e1a 30%     \u6309\u90dc\u8001\u5e08\u6240\u8bf4\uff0c\u53ea\u8981\u90fd\u4ea4\u4e86\u5c31\u53ef\u4ee5\u62ff\u6ee1\uff0chw\u7b54\u6848\u4e66\u6700\u540e\u90fd\u6709</li> <li>\u5c0f\u6d4b\uff08\u671f\u4e2d\u8003\uff09 20%     98\u5386\u5e74\u9898\u5747\u6709\uff0c\u56e0\u4e3a\u90dc\u8001\u5e08\u662f\u5c06\u5c0f\u6d4b\u9898\u653e\u5728\u5b66\u5728\u6d59\u5927\u4e0a\u516c\u5e03\u7684\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u641c\u5bfb</li> <li>\u671f\u672b 50%     \u9898\u578b\u5305\u62ec\u89e3\u65b9\u7a0b\u3001\u8bc1\u660e\u9898\u3001\u5e94\u7528\u9898\uff0c\u5177\u4f53\u53ef\u89c1\u540e\u7eedSavia\u524d\u8f88\u653e\u768424-25\u590f\u56de\u5fc6\u5377</li> </ol>"},{"location":"ZJU_courses/24-25_Summer_ODE_Chuanhou_Gao/#_3","title":"\u5907\u8003\u5efa\u8bae\u4e0e\u8d44\u6599\u5206\u4eab","text":"<p>\u4e00\u5b66\u5206\u5e38\u5fae\u5206\u65b9\u7a0b\u5230\u4e0e\u4e0d\u5230\u8bfe\u5bf9\u4fee\u8bfb\u5f71\u54cd\u4e0d\u5927\uff0c\u5b8c\u5168\u53ef\u4ee5\u91c7\u7528\u4f5c\u4e1a\u5e03\u7f6e\u540e\u81ea\u4e60\u5b8c\u6210\uff0c\u5e73\u65f6\u4f5c\u4e1a\u8ddf\u4e0a\uff0c\u671f\u672b\u505a\u51e0\u5957\u4e60\u9898\u7684\u65b9\u5f0f\u8fdb\u884c\u4fee\u8bfb\u3002</p> <p>\u81f3\u4e8e\u671f\u672b\u5237\u9898\uff0c\u9996\u9009\u662f\u56de\u5fc6\u7684\u5386\u5e74\u5377\uff0c\u5176\u4e2d24-25\u590f\u7684\u56de\u5fc6\u5377\u80af\u5b9a\u662f\u6709\u7684\uff0c\u5176\u6b21\u5c31\u662f\u628a\u8bfe\u540e\u4e60\u9898\u90fd\u505a\u4e00\u904d\uff0c\u8fd9\u5bf9\u5e38\u5fae\u5206\u6765\u8bf4\u5c31\u591f\u4e86\u3002</p> <p>\u6211\u7684\u671f\u672b\u590d\u4e60\u4e5f\u53ea\u662f\u770b\u7740\u81ea\u5df1\u7684\u7b14\u8bb0\u505a\u4e86\u51e0\u904d\u201c\u7591\u4f3c\u4e00\u5b66\u5206\u5e38\u5fae\u5206\u7684\u5386\u5e74\u9898\u201d\uff0c\u5728\u8fd9\u91cc\u4e5f\u5f3a\u70c8\u63a8\u8350\u4e0bSavia\u524d\u8f88\u7684\u5e38\u5fae\u5206\u7b14\u8bb0\uff0c\u53ef\u4ee5\u5f53\u4f5c\u8865\u5929 or \u590d\u4e60\u8d44\u6599\uff0c\u5c06Savia\u5e38\u5fae\u5206\u7b14\u8bb0\u5168\u8fc7\u4e86\u671f\u672b\u8003\u5e94\u8be5\u5c31\u6ca1\u95ee\u9898\u3002</p> <p>\u4e0b\u9762\u6211\u5c06\u6211\u7684\u7b14\u8bb0\u653e\u51fa\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u53d6\u3002</p> <p>\u8fd9\u662f CC98 \u5bf9\u5e94\u5e16\u5b50\u94fe\u63a5</p>"},{"location":"ZJU_courses/24-25_Summer_ODE_Chuanhou_Gao/#_4","title":"\u8bfe\u7a0b\u4fee\u8bfb\u611f\u53d7","text":"<p>\u90dc\u4f20\u539a\u8001\u5e08\u8bb2\u7684\u771f\u7684\u5f88\u6e05\u695a\uff0c\u5982\u679c\u4e60\u60ef\u542c\u8bb2\u5b66\u4e60\u7684\u540c\u5b66\u53ef\u4ee5\u5168\u7a0b\u8ddf\u7740\uff0c\u5982\u679c\u53e6\u6709\u5b89\u6392\uff08\u72d7\u5934\uff09\u7684\u540c\u5b66\u4e5f\u53ef\u4ee5\u81ea\u5b66\uff0c\u81f3\u5c11\u6211\u8fd9\u5b66\u671f\u90dc\u8001\u5e08\u9664\u4e86\u671f\u4e2d\u6d4b\u8bd5\u6ca1\u70b9\u8fc7\u540d</p>"},{"location":"ZJU_courses/ZJU_courses_profile/","title":"Overview","text":"<p> \u7ea6 81 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f</p> <p>\u5165\u5b66 ZJU \u4e00\u5e74\u4ee5\u6765\uff0c\u5728 CC98 \u4e0e\u5404\u4f4d\u4f18\u79c0\u5b66\u957f\u59d0\u7684\u4e2a\u4eba\u7f51\u7ad9\u4e0a\u83b7\u53d6\u5230\u4e86\u4e0d\u5c11\u7684\u5b66\u4e60\u8d44\u6e90\uff0c\u56e0\u6b64\u4e2a\u4eba\u4e5f\u60f3\u5c06\u81ea\u5df1\u7684\u5b66\u4e60\u7ecf\u9a8c\u6574\u7406\u6210\u6587\u6863\u4f9b\u4ed6\u4eba\u501f\u9274\u3002</p> <p>\u4e00\u6765\u53ef\u4ee5\u4fbf\u5229\u540e\u8f88\uff0c\u4e8c\u6765\u4e5f\u53ef\u4ee5\u7763\u4fc3\u81ea\u5df1\u8ba4\u771f\u5bf9\u5f85\u5b66\u4e1a\uff08\uff09\u3002</p>"},{"location":"courses/Berkeley-CS61A-2022Fall/","title":"CS61A Note","text":"<p> \u7ea6 216 \u4e2a\u5b57  241 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p>"},{"location":"courses/Berkeley-CS61A-2022Fall/#lecture-1-computer-science","title":"Lecture 1 Computer Science","text":"<pre><code>shakes = open('shekespeare.txt')\ntext = shakes.read().split()\ntext.count('the')\n\nwords=set(text)\n# in a set something only shows up once\n</code></pre>"},{"location":"courses/Berkeley-CS61A-2022Fall/#lecture-2-functions","title":"Lecture 2 Functions","text":"<pre><code>max(2,4)\nmin(-2,50000)\nform operator import add,mul\nadd(2,3)\nmul(2,3)\nmax(1,2,3,4,5)\n</code></pre>"},{"location":"courses/Berkeley-CS61A-2022Fall/#lecture-3-control","title":"Lecture 3 Control","text":"<pre><code>None\n# noting\n\nprint(None)\n# output None\uff0c\u5176\u8fd4\u56de\u503c\u662fNone\n\nprint(print(1),print(2))\n# output\n# 1\n# 2\n# None None\n</code></pre> <p>Pure Functions just return values <pre><code>abs(-2)\npow(2,100)\n</code></pre></p> <p>Non-Pure Functions have side effects <pre><code>print(-2)\n# display the output \"-2\" and return None\n</code></pre></p> <p>Def statement: <pre><code>square(x):\nreturn mul(x,x)\n</code></pre> Call expression: <code>square(2+2)</code> Calling/Applying <pre><code>from operator import mul\ndef square(x):\n    return mul(x,x)\nsquare(square(3))\n</code></pre></p> <p><pre><code>from operator import truediv,floordiv,mod\ntruediv(2024,10)\nfloordiv(2024,10)\nmod(2024,10)\n</code></pre> \u53bb\u5b66vim\uff01</p>"},{"location":"courses/Berkeley-CS61A-2022Fall/#conditional-statement","title":"Conditional statement","text":"<p>what's demo? demonstration\u2014\u2014\u6f14\u793a <pre><code>def absolute_value(x):\n    if x&lt;0:\n        return -x\n    elif x==0:\n        return 0\n    else:\n        return x\n</code></pre> False values in Python: <code>False</code>, <code>0</code> , <code>''</code>, <code>None</code> True values in Python: Anything else</p>"},{"location":"courses/Berkeley-CS61A-2022Fall/#iteration","title":"Iteration","text":"<pre><code>i,total=0,0\nwhile i&lt;3:\n    i=i+1\n    total=total+i\n</code></pre>"},{"location":"courses/Berkeley-CS61A-2022Fall/#lecture-4-higher-order-functions","title":"Lecture 4 Higher-Order Functions","text":""},{"location":"courses/Berkeley-CS61A-2022Fall/#prime-factorization","title":"Prime Factorization","text":"<pre><code>\"\"\"My code\"\"\"\n\"\"\"\ndef print_theend(num):\n\u00a0 \u00a0 temp=num\n\u00a0 \u00a0 k=smallest_the_prime_num(num)\n\u00a0 \u00a0 while k!=temp:\n\u00a0 \u00a0 \u00a0 \u00a0 k=smallest_the_prime_num(num)\n\u00a0 \u00a0 \u00a0 \u00a0 num=num/k\n\u00a0 \u00a0 \u00a0 \u00a0 print(k)\n\"\"\"\ndef print_theend(num):\n    while num&gt;1:\n        k=smallest_the_prime_num(num)\n        num=num//k\n        print(k)\ndef smallest_the_prime_num(num):\n\u00a0 \u00a0 temp=2\n\u00a0 \u00a0 while num%temp!=0:\n\u00a0 \u00a0 \u00a0 \u00a0 temp=temp+1\n\u00a0 \u00a0 return temp\nnum=int(input(\"Please input a number then it will output the prime factorition: \"))\nprint_theend(num)\n\n\"\"\"The demo code\"\"\"\ndef prime_factors(n):\n    while n&gt;1:\n        k=smallest_prime_factor(n)\n        n=n//k\n        print(k)\ndef smallest_prime_factor(n):\n    k=2\n    while n%k!=0:\n        k=k+1\n    return k\n</code></pre>"},{"location":"courses/Berkeley-CS61A-2022Fall/#the-fibonacci-sequence","title":"The Fibonacci Sequence","text":"<p>0, 1, 1, 2, 3, 5, 8, 13 etc. Demo <pre><code>def fib(n):\n    \"\"\"Compute the nth Fibonacci number, for N &gt;= 1.\"\"\"\n    pred, curr = 0, 1\n    k=1\n    while k&lt;n:\n        pred, curr = curr, pred + curr\n        k=k+1\n    return curr\n</code></pre></p>"},{"location":"courses/Berkeley-CS61A-2022Fall/#lecture-5-environments","title":"Lecture 5 Environments","text":"<p>![[Pasted image 20250225102308.png]]</p>"},{"location":"courses/Berkeley-CS61A-2022Fall/#environments-for-nested-definitions","title":"Environments for Nested Definitions","text":"<pre><code>def make_adder(n):\n    def adder(k):\n        return k+n\n    return adder\nadd_three = make_adder(3)\nadd_three(4)\n</code></pre>"},{"location":"courses/Berkeley-CS61A-2022Fall/#local-names","title":"Local Names","text":""},{"location":"courses/Berkeley-CS61A-2022Fall/#function-compostion","title":"Function Compostion","text":""},{"location":"courses/Berkeley-CS61A-2022Fall/#lambda-expressions","title":"Lambda Expressions","text":"<p>Lambda \u8868\u8fbe\u5f0f\u662f\u901a\u8fc7\u6307\u5b9a\u4e24\u4e2a things\uff1a\u53c2\u6570\u548c return \u8868\u8fbe\u5f0f\u3002 <pre><code>lambda &lt;parameters&gt;: &lt;return expression&gt;\n</code></pre></p>"},{"location":"courses/Berkeley-CS61A-2022Fall/#currying","title":"Currying","text":"<pre><code>def make_adder(n):\n    return lambda k: n+k\n</code></pre> <pre><code>def curry2(f):\n    def g(x):\n        def h(y):\n            return f(x,y)\n        return h\n    return g\n</code></pre>"},{"location":"courses/Berkeley-CS61A-2022Fall/#lecture-recursion","title":"Lecture ? Recursion","text":""},{"location":"courses/Berkeley-CS61A-2022Fall/#self-reference","title":"Self-Reference","text":"<pre><code>def print_sums(x):\n    print(x)\n    def next_sum(y):\n        return print_sums(x+y)\n    return next_sum\n\nprint_sums(1)(3)(5)\n# output 1 4 9\n</code></pre>"},{"location":"courses/Berkeley-CS61A-2022Fall/#recursive-functions","title":"Recursive Functions","text":"<pre><code>def split(n):\n    return n // 10, n % 10\n'''\ninput\nall_but_last, last = split(2025)\nthen\nall_but_last == 202\nlast == 5\n'''\n\ndef sum_digits(n):\n    if n &lt; 10:\n        return n\n    else:\n        all_but_last, last = split(n)\n        return sum_digits(all_but_last) + last\n</code></pre>"},{"location":"courses/Berkeley-CS61A-2022Fall/#recursion-in-environment-diagrams","title":"Recursion in Environment Diagrams","text":"<pre><code>def fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n-1)\nprint(fact(3))\n</code></pre>"},{"location":"courses/Berkeley-CS61A-2022Fall/#verifying-recursive-functions","title":"Verifying Recursive Functions","text":"<p>Is fact implemented correctly?</p> <ol> <li>Verify the base case.</li> <li>Treat fact as a functional abstraction!</li> <li>Assume that fact(n-1) is correct.</li> <li>Verify that fact(n) is correct, assuming that fact(n-1) correct.</li> </ol>"},{"location":"courses/Berkeley-CS61A-2022Fall/#mutual-recursion","title":"Mutual Recursion","text":"<pre><code>def luhn_sum(n):\n    if n &lt; 10:\n        return n\n    else:\n        all_but_last, last = split(n)\n        return luhn_sum_double(all_but_last) + last\ndef luhn_sum_double(n):\n    all_but_last, last = split(n)\n    luhn_digit = sum_digits(2 * last)\n    if n &lt; 10:\n        return luhn_digit\n    else:\n        return luhn_sum(all_but_last) + luhn_digit\n</code></pre>"},{"location":"courses/Berkeley-CS61A-2022Fall/#recursion-and-iteration","title":"Recursion and Iteration","text":"<pre><code>def sum_digits_iter(n):\n    digit_sum = 0\n    while n &gt; 0:\n        n, last = split(n)\n        digit_sum = digit_sum +last\n    return digit_sum\n</code></pre>"},{"location":"courses/Berkeley-CS61A-2022Fall/#lecture-tree-recursion","title":"Lecture ? Tree Recursion","text":""},{"location":"courses/Berkeley-CS61A-2022Fall/#order-of-recursive-calls","title":"Order of Recursive Calls","text":"<p>cascade function <pre><code>def cascade(n):\n    if n &lt; 10:\n        print(n)\n    else:\n        print(n)\n        cascade(n // 10)\n        print(n)\nprint(cascade(12345))\n</code></pre></p> <pre><code>def cascade(n):\n    print(n)\n    if n &gt;= 10:\n        cascade(n//10)\n        print(n)\nprint(cascade(12345))\n</code></pre>"},{"location":"courses/Berkeley-CS61A-2022Fall/#example-inverse-cascade","title":"Example: Inverse Cascade","text":"<pre><code>'''\n1\n12\n123\n1234\n123\n12\n1\n'''\ndef inverse_cascade(n):\n    grow(n)\n    print(n)\n    shrink(n)\ndef f_the_g(f,g,n):\n    if n:\n        f(n)\n        g(n)\ngrow = lambda n: f_then_g(grow,print,n//10)\nshrink = lambda n: f_then_g(print,shrink,n//10)\n</code></pre>"},{"location":"courses/Berkeley-CS61A-2022Fall/#tree-recursion","title":"Tree Recursion","text":"<pre><code>'''\nfibonacci numbers\nfib(n): 0, 1, 1, 2, 3, 5, 8, 13, 21 etc.\n'''\n'''\nucb is one of the project offered by Uc Berkeley.\nI have no way to use it.\n'''\nfrom ucb import trace\n\n@trace\ndef fib(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-2) + fib(n-1)\n</code></pre>"},{"location":"courses/Berkeley-CS61A-2022Fall/#example-counting-partitions","title":"Example: Counting Partitions","text":"<p>![[Pasted image 20250305221056.png]]</p> <p>Tree recursion often involves exploring different choices.</p> <pre><code>def count_partitions(n,m):\n    if n == 0:\n        return 1\n    elif n &lt; 0:\n        return 0\n    elif m == 0:\n        return 0\n    else:\n        with_m = count_partitions(n-m,m)\n        without_m = count_partitions(n,m-1)\n        return with_m + without_m\n</code></pre>"},{"location":"courses/Berkeley-CS61A-2022Fall/#lecture-sequences","title":"Lecture ? Sequences","text":""},{"location":"courses/Berkeley-CS61A-2022Fall/#lists","title":"Lists","text":"<pre><code>digits = [1,8,2,8]\ndigits = [2//2,2+2+2+2,2,2*2]\n# they are the same\n\nlen(digits) # equals 4\ndigits[3] # equals 8\ngetitem(digits,3) # equals 8\n\n[2,7] + digits * 2\nadd([2,7],mul(digits,2))\n# they are the same\n# equals [2,7,1,8,2,8,1,8,2,8]\n\npairs = [ [10,20] , [30,40] ]\npairs[1] # equals [30,40]\npairs[1][0] # equals 30\n</code></pre>"},{"location":"courses/Berkeley-CS61A-2022Fall/#containers","title":"Containers","text":"<p><pre><code>digits = [1,8,2,8]\n1 in digits # True\n5 in digits # False\n'1' in digits # False\n[1,8] in digits # False\n[1,2] in [3,[1,2],4] # True\n</code></pre> <code>in</code> just goes element by element and sees whether it's equal to the element you're looking for.</p>"},{"location":"courses/Berkeley-CS61A-2022Fall/#for-statements","title":"For Statements","text":""},{"location":"courses/Berkeley-CS61A-2022Fall/#ranges","title":"Ranges","text":""},{"location":"courses/Berkeley-CS61A-2022Fall/#list-comprehensions","title":"List Comprehensions","text":""},{"location":"courses/Berkeley-CS61A-2022Fall/#lists-slices-recursion","title":"Lists, Slices, &amp; Recursion","text":""},{"location":"projects/%E5%9F%BA%E4%BA%8Epyautogui%E7%9A%84%E6%85%A7%E5%AD%A6%E5%A4%96%E8%AF%ADEtalk%E8%87%AA%E5%8A%A8%E5%AE%9E%E7%8E%B0/","title":"\u57fa\u4e8epyautogui\u7684\u6167\u5b66\u5916\u8bedEtalk\u81ea\u52a8\u5b9e\u73b0","text":"<p> \u7ea6 132 \u4e2a\u5b57  12 \u884c\u4ee3\u7801  1 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"projects/%E5%9F%BA%E4%BA%8Epyautogui%E7%9A%84%E6%85%A7%E5%AD%A6%E5%A4%96%E8%AF%ADEtalk%E8%87%AA%E5%8A%A8%E5%AE%9E%E7%8E%B0/#_1","title":"\u539f\u7406","text":"<p>\u6240\u9700\u73af\u5883\uff1apyautogui\u3001\u7f51\u9875\u7248\u6167\u5b66\u5916\u8bed</p> <p>\u5728<code>messages</code>\u4e2d\u50a8\u5b58\u53d1\u9001\u7684\u6587\u672c-&gt;\u5c06\u6587\u672c\u590d\u5236\u5230\u526a\u8d34\u677f-&gt;\u70b9\u51fb\u5c4f\u5e55\u4e0a\u7684\u8f93\u5165\u6846-&gt;\u7c98\u8d34\u5185\u5bb9-&gt;\u70b9\u51fb\u53d1\u9001\u8fdb\u884c\u53d1\u9001\u6587\u672c-&gt;\u6682\u505c10s\u4ee5\u7ed9Etalk\u56de\u7b54\u65f6\u95f4</p>"},{"location":"projects/%E5%9F%BA%E4%BA%8Epyautogui%E7%9A%84%E6%85%A7%E5%AD%A6%E5%A4%96%E8%AF%ADEtalk%E8%87%AA%E5%8A%A8%E5%AE%9E%E7%8E%B0/#_2","title":"\u5177\u4f53\u64cd\u4f5c","text":""},{"location":"projects/%E5%9F%BA%E4%BA%8Epyautogui%E7%9A%84%E6%85%A7%E5%AD%A6%E5%A4%96%E8%AF%ADEtalk%E8%87%AA%E5%8A%A8%E5%AE%9E%E7%8E%B0/#_3","title":"\u73af\u5883\u914d\u7f6e","text":"<p><code>pip install pyautogui</code></p>"},{"location":"projects/%E5%9F%BA%E4%BA%8Epyautogui%E7%9A%84%E6%85%A7%E5%AD%A6%E5%A4%96%E8%AF%ADEtalk%E8%87%AA%E5%8A%A8%E5%AE%9E%E7%8E%B0/#_4","title":"\u4ee3\u7801","text":"<p>Pycharm\u3001Vscode\u5747\u53ef <pre><code>import pyautogui  \nimport pyperclip  \nimport time  \n\nmessages = [\"Who are you?\", \"I'm happy to talk with you\", \"How are you?\"]  \nwhile True:  \n    for msg in messages:  \n        pyperclip.copy(msg)                # \u590d\u5236\u6587\u672c\u5230\u526a\u8d34\u677f  \n        pyautogui.click(x1,y1)             # \u5373\u6587\u672c\u6846\u5750\u6807  \n        pyautogui.hotkey('ctrl', 'v')      # \u7c98\u8d34\uff08Windows\uff09  \n        pyautogui.click(x2,y2)             # \u5373\u53d1\u9001\u6846\u5750\u6807\n        time.sleep(10)\n</code></pre></p> \u83b7\u53d6\u5c4f\u5e55\u5750\u6807 <p>\u7528Snipaste\u8f6f\u4ef6\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u4ee3\u7801\u7684\u5750\u6807\u5927\u81f4\u4e3a<code>(550,1070)</code> </p>"},{"location":"projects/%E5%9F%BA%E4%BA%8Epyautogui%E7%9A%84%E6%85%A7%E5%AD%A6%E5%A4%96%E8%AF%ADEtalk%E8%87%AA%E5%8A%A8%E5%AE%9E%E7%8E%B0/#100min","title":"\u8ba9\u4f60\u7684\u7535\u8111\u7a7a\u8dd1100min\u5373\u53ef","text":""}]}